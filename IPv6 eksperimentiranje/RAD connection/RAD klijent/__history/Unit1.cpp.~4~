//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma comment( lib, "Ws2_32.lib" )
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{

}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormCreate(TObject *Sender)
{
//
    memIspis->Lines->Clear();
	if (WSAStartup(MAKEWORD(1, 1), &wsaData) != 0)
		return;
	memIspis->Lines->Add(L"WSA aktiviran");
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormDestroy(TObject *Sender)
{
	WSACleanup();
}
//---------------------------------------------------------------------------

void __fastcall TForm2::IspisiAdresu(ADDRINFO *info)
{
	char *adresa;
	wchar_t ispis[255];
	if(info==NULL)
		return;
    if(info->ai_family==AF_INET)
    {
        adresa=new char[INET_ADDRSTRLEN];
        sockaddr_in *in = (sockaddr_in *)info->ai_addr;
		inet_ntop(AF_INET,&(in->sin_addr), adresa, INET_ADDRSTRLEN);
		swprintf(ispis,L"IPv4 adresa: %ls, port: %ls",adresa, ntohs(in->sin_port));
		memIspis->Lines->Add(ispis);
        delete[] adresa;
    }
    else if(info->ai_family==AF_INET6)
    {
        adresa=new char[INET6_ADDRSTRLEN];
        sockaddr_in6 *in = (sockaddr_in6 *)info->ai_addr;
        inet_ntop(AF_INET6,&(in->sin6_addr), adresa, INET6_ADDRSTRLEN);
        cout << "IPv6 adresa: " << adresa << ", port: " << ntohs(in->sin6_port) << endl;
        delete[] adresa;
	}
}
//---------------------------------------------------------------------------
